/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Mesh_2: THREE.Mesh
  }
  materials: {
    Wood: THREE.MeshStandardMaterial
    Brass: THREE.MeshStandardMaterial
    Plastic: THREE.MeshStandardMaterial
  }
}

const PipeModel = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('./models/pipe/pipe.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh.geometry} material={materials.Wood} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_1.geometry} material={materials.Brass} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_2.geometry} material={materials.Plastic} />
    </group>
  )
}

export default PipeModel;
useGLTF.preload('/pipe.gltf')
